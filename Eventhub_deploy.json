{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of EventHub namespace"
      }
    },


    "isAutoInflateEnabled": {
      "type": "string",
      "defaultValue": "True",
      "allowedValues": [
        "True",
        "False"
      ],
      "metadata": {
        "description": "Enable or disable AutoInflate"
      }
    },

    "eventhubSku": {
      "type": "string",
      "allowedValues": [ "Basic", "Standard" ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The messaging tier for service Bus namespace"
      }
    },
    "skuCapacity": {
      "type": "int",
      "allowedValues": [ 1, 2, 4 ],
      "defaultValue": 1,
      "metadata": {
        "description": "MessagingUnits for premium namespace"
      }
    },

    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Name of Event Hub"
      }
    },
    "consumerGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of Consumer Group"
      }
    },
    "subscriptionId": {
      "type": "string"
    },
    "messageRetentionInDays": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 7,
      "metadata": {
        "description": "How long to retain the data in Event Hub"
      }
    },
    "partitionCount": {
      "type": "int",
      "defaultValue": 4,
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of partitions chosen"
      }
    },

    "eventhubAuthorizationRuleName": {
      "type": "string",
      "metadata": {
        "description": "Name of Eventhub Authorization Rule"
      }
    },
    "eventhubAuthorizationRuleName1": {
      "type": "string",
      "metadata": {
        "description": "Name of Eventhub Authorization Rule"
      }
    },



    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('namespaceName'), variables('defaultSASKeyName'))]",
    "ehAuthorizationRuleId1": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('namespaceName'),parameters('eventHubName'), parameters('eventhubAuthorizationRuleName'))]",
    "ehAuthorizationRuleId2": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('namespaceName'),parameters('eventHubName'), parameters('eventhubAuthorizationRuleName1'))]"
  },
    "resources": [
      {
        "apiVersion": "2017-04-01",
        "name": "[parameters('namespaceName')]",
        "type": "Microsoft.EventHub/namespaces",

        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('eventhubSku')]",
          "tier": "[parameters('eventhubSku')]",
          "capacity": "[parameters('skuCapacity')]"
        },
        "tags": {
          "tag1": "Eventhub for test"

        },
        "properties": {
          "isAutoInflateEnabled": "[parameters('isAutoInflateEnabled')]"
        },

        "resources": [
          {
            "apiVersion": "2017-04-01",
            "name": "[parameters('eventHubName')]",
            "type": "eventhubs",
            "dependsOn": [
              "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'))]"
            ],
            "properties": {
              "messageRetentionInDays": "[parameters('messageRetentionInDays')]",
              "partitionCount": "[parameters('partitionCount')]"
            },
            "resources": [
              {
                "apiVersion": "2017-04-01",
                "name": "[parameters('consumerGroupName')]",
                "type": "consumergroups",
                "dependsOn": [ "[parameters('eventHubName')]" ],
                "properties": {
                  "userMetadata": "User Metadata goes here"
                }
              },

              {
                "apiVersion": "2017-04-01",
                "name": "[parameters('eventhubAuthorizationRuleName')]",
                "type": "authorizationRules",
                "dependsOn": [
                  "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'),'/eventhubs/',parameters('eventHubName'))]"
                ],
                "properties": {
                  "rights": [
                    "Send",
                    "Listen",
                    "Manage"
                  ]
                }
              },
              {
                "apiVersion": "2017-04-01",
                "name": "[parameters('eventhubAuthorizationRuleName1')]",
                "type": "authorizationRules",
                "dependsOn": [
                  "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'),'/eventhubs/',parameters('eventHubName'))]"
                ],
                "properties": {
                  "rights": [
                    "Send"
                  ]
                }
              }


            ]

          }

        ]


      }


    ],
    "outputs": {
      "NamespaceConnectionString": {
        "type": "string",
        "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
      },
      "SharedAccessPolicyPrimaryKey": {
        "type": "string",
        "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryKey]"
      },
      "EventHubConnectionString": {
        "type": "string",
        "value": "[listkeys(variables('ehAuthorizationRuleId1'), '2017-04-01').primaryConnectionString]"
      },
      "EventHubSharedAccessPolicyPrimaryKey": {
        "type": "string",
        "value": "[listkeys(variables('ehAuthorizationRuleId1'), '2017-04-01').primaryKey]"
      },
      "EventHub1ConnectionString": {
        "type": "string",
        "value": "[listkeys(variables('ehAuthorizationRuleId2'), '2017-04-01').primaryConnectionString]"
      },
      "EventHub1SharedAccessPolicyPrimaryKey": {
        "type": "string",
        "value": "[listkeys(variables('ehAuthorizationRuleId2'), '2017-04-01').primaryKey]"
      }

    }

  }
      
